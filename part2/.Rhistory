ylab = "Mean FPR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fpr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
# Mean FPR
ylab = "Mean FPR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fpr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-0.840
10^-0.840
10^-0.670
# Mean FNR
ylab = "Mean FNR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fnr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
title("10-folds CV")
10^-1.155
10^-1.155
10^-1.050
par(mfrow=c(2,1))
# Mean FPR
ylab = "Mean FPR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fpr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-0.840
10^-0.840
10^-0.670
# Mean FNR
ylab = "Mean FNR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fnr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-1.155
10^-1.155
10^-1.050
par(mfrow=c(1,2))
# Mean FPR
ylab = "Mean FPR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fpr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-0.840
10^-0.840
10^-0.670
# Mean FNR
ylab = "Mean FNR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fnr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-1.155
10^-1.155
10^-1.050
par(mfrow=c(1,2))
# Mean FPR
ylab = "Mean FPR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fpr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-0.840
10^-0.840
10^-0.670
# Mean FNR
ylab = "Mean FNR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fnr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-1.155
10^-1.155
10^-1.050
ylab = "Mean Misclassification Rate"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Error_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Error_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Error_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
par(mfrow=c(1,1))
# Mean Misclassification Rate
ylab = "Mean Misclassification Rate"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Error_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Error_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Error_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
# mean norm of Graphical Lasso
ylab = expression(paste("Mean norm of ",hat(Theta)-Theta))
ylim = c(0, 1.5)
xlim = NULL
plot.cv(Ee1_3, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Ee2_3, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eef_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eem_3, grid, col=6, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topright",legend=c("1-norm","2-norm","Frobenius norm","max norm"), col=c(2,3,4,6), pch="-", cex = 1)
title("10-folds CV using Graphical Lasso")
par(mfrow=c(1,2))
# mean norm of Graphical Lasso
ylab = expression(paste("Mean norm of ",hat(Theta)-Theta))
ylim = c(0, 1.5)
xlim = NULL
plot.cv(Ee1_3, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Ee2_3, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eef_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eem_3, grid, col=6, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topright",legend=c("1-norm","2-norm","Frobenius norm","max norm"), col=c(2,3,4,6), pch="-", cex = 1)
title("10-folds CV using Graphical Lasso")
10^-1.3
10^-1.7
10^-1.5
10^-1.57
# mean norm of Node-wise Lasso
ylab = expression(paste("Mean norm of ",hat(Theta)-Theta))
ylim = c(0,4)
xlim = NULL
plot.cv(Ee1_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Ee2_1, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eef_1, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eem_1, grid, col=6, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("1-norm","2-norm","Frobenius norm","max norm"), col=c(2,3,4,6), pch="-", cex = 1)
title("10-folds CV using Node-wise Lasso")
10^-0.59
par(mfrow=c(1,2))
# Mean FPR
ylab = "Mean FPR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fpr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fpr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-0.840
10^-0.840
10^-0.670
# Mean FNR
ylab = "Mean FNR"
ylim = c(0, 0.1)
xlim = NULL
plot.cv(Fnr_1, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_2, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Fnr_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topleft",legend=c("node-wise 1","node-wise 2", "graphical"), col=c(2,3,4), pch="-", cex = 1)
10^-1.155
10^-1.155
10^-1.050
set.seed(666)
p <- 50
n <- 500
prob <- 0.1
grid <- 10 ^ seq(0.5,-2.5, length = 50)
auc_1 <- c(); auc_2 <- c(); auc_3 <- c()
Error_1 <- c(); Fpr_1 <- c(); Fnr_1 <- c()
Error_2 <- c(); Fpr_2 <- c(); Fnr_2 <- c()
Error_3 <- c(); Fpr_3 <- c(); Fnr_3 <- c()
Ee1_1 <- c(); Eef_1 <- c(); Eem_1 <- c(); Ee2_1 <- c()
Ee1_3 <- c(); Eef_3 <- c(); Eem_3 <- c(); Ee2_3 <- c()
t = 1
while (t<=50){
cat(t, ",")
data <- generate(p, n, prob)
while ( sum(data$E_true)==0 ){ data <- generate(p, n, prob) }
perf.nodewise <- performance.nodewise.grid(data$X, data$E_true, grid)
perf.glasso <- performance.glasso.grid(data$X, data$E_true, grid)
auc_1 <- append(auc_1, perf.nodewise$auc_1)
auc_2 <- append(auc_2, perf.nodewise$auc_2)
auc_3 <- append(auc_3, perf.glasso$auc)
Error_1 <- rbind(Error_1, perf.nodewise$error_1)
Fpr_1 <- rbind(Fpr_1, perf.nodewise$fpr_1)
Fnr_1 <- rbind(Fnr_1, 1-perf.nodewise$tpr_1)
Error_2 <- rbind(Error_2, perf.nodewise$error_2)
Fpr_2 <- rbind(Fpr_2, perf.nodewise$fpr_2)
Fnr_2 <- rbind(Fnr_2, 1-perf.nodewise$tpr_2)
Error_3 <- rbind(Error_3, perf.glasso$error)
Fpr_3 <- rbind(Fpr_3, perf.glasso$fpr)
Fnr_3 <- rbind(Fnr_3, 1-perf.glasso$tpr)
Ee1_1 <- rbind(Ee1_1, perf.nodewise$ee1)
Eef_1 <- rbind(Eef_1, perf.nodewise$eef)
Eem_1 <- rbind(Eem_1, perf.nodewise$eem)
Ee2_1 <- rbind(Ee2_1, perf.nodewise$ee2)
Ee1_3 <- rbind(Ee1_3, perf.glasso$ee1)
Eef_3 <- rbind(Eef_3, perf.glasso$eef)
Eem_3 <- rbind(Eem_3, perf.glasso$eem)
Ee2_3 <- rbind(Ee2_3, perf.glasso$ee2)
t <- t+1
}
while (t<=50){
cat(t, ",")
data <- generate(p, n, prob)
while ( sum(data$E_true)==0 ){ data <- generate(p, n, prob) }
perf.nodewise <- performance.nodewise.grid(data$X[folds!=k,], grid, data$E_true, data$Theta)
perf.glasso <- performance.glasso.grid(data$X[folds!=k,], grid, data$E_true, data$Theta)
auc_1 <- append(auc_1, perf.nodewise$auc_1)
auc_2 <- append(auc_2, perf.nodewise$auc_2)
auc_3 <- append(auc_3, perf.glasso$auc)
Error_1 <- rbind(Error_1, perf.nodewise$error_1)
Fpr_1 <- rbind(Fpr_1, perf.nodewise$fpr_1)
Fnr_1 <- rbind(Fnr_1, 1-perf.nodewise$tpr_1)
Error_2 <- rbind(Error_2, perf.nodewise$error_2)
Fpr_2 <- rbind(Fpr_2, perf.nodewise$fpr_2)
Fnr_2 <- rbind(Fnr_2, 1-perf.nodewise$tpr_2)
Error_3 <- rbind(Error_3, perf.glasso$error)
Fpr_3 <- rbind(Fpr_3, perf.glasso$fpr)
Fnr_3 <- rbind(Fnr_3, 1-perf.glasso$tpr)
Ee1_1 <- rbind(Ee1_1, perf.nodewise$ee1)
Eef_1 <- rbind(Eef_1, perf.nodewise$eef)
Eem_1 <- rbind(Eem_1, perf.nodewise$eem)
Ee2_1 <- rbind(Ee2_1, perf.nodewise$ee2)
Ee1_3 <- rbind(Ee1_3, perf.glasso$ee1)
Eef_3 <- rbind(Eef_3, perf.glasso$eef)
Eem_3 <- rbind(Eem_3, perf.glasso$eem)
Ee2_3 <- rbind(Ee2_3, perf.glasso$ee2)
t <- t+1
}
while (t<=50){
cat(t, ",")
data <- generate(p, n, prob)
while ( sum(data$E_true)==0 ){ data <- generate(p, n, prob) }
perf.nodewise <- performance.nodewise.grid(data$X, grid, data$E_true, data$Theta)
perf.glasso <- performance.glasso.grid(data$X, grid, data$E_true, data$Theta)
auc_1 <- append(auc_1, perf.nodewise$auc_1)
auc_2 <- append(auc_2, perf.nodewise$auc_2)
auc_3 <- append(auc_3, perf.glasso$auc)
Error_1 <- rbind(Error_1, perf.nodewise$error_1)
Fpr_1 <- rbind(Fpr_1, perf.nodewise$fpr_1)
Fnr_1 <- rbind(Fnr_1, 1-perf.nodewise$tpr_1)
Error_2 <- rbind(Error_2, perf.nodewise$error_2)
Fpr_2 <- rbind(Fpr_2, perf.nodewise$fpr_2)
Fnr_2 <- rbind(Fnr_2, 1-perf.nodewise$tpr_2)
Error_3 <- rbind(Error_3, perf.glasso$error)
Fpr_3 <- rbind(Fpr_3, perf.glasso$fpr)
Fnr_3 <- rbind(Fnr_3, 1-perf.glasso$tpr)
Ee1_1 <- rbind(Ee1_1, perf.nodewise$ee1)
Eef_1 <- rbind(Eef_1, perf.nodewise$eef)
Eem_1 <- rbind(Eem_1, perf.nodewise$eem)
Ee2_1 <- rbind(Ee2_1, perf.nodewise$ee2)
Ee1_3 <- rbind(Ee1_3, perf.glasso$ee1)
Eef_3 <- rbind(Eef_3, perf.glasso$eef)
Eem_3 <- rbind(Eem_3, perf.glasso$eem)
Ee2_3 <- rbind(Ee2_3, perf.glasso$ee2)
t <- t+1
}
min_error_1 <- apply(Error_1, 1, min)
min_error_2 <- apply(Error_2, 1, min)
min_error_3 <- apply(Error_3, 1, min)
min_fpr_1 <- apply(Fpr_1, 1, min)
min_fpr_2 <- apply(Fpr_2, 1, min)
min_fpr_3 <- apply(Fpr_3, 1, min)
min_fnr_1 <- apply(Fnr_1, 1, min)
min_fnr_2 <- apply(Fnr_2, 1, min)
min_fnr_3 <- apply(Fnr_3, 1, min)
min_fpr_1 <- apply(Fpr_1, 1, min)
min_fpr_2 <- apply(Fpr_2, 1, min)
min_fpr_3 <- apply(Fpr_3, 1, min)
min_ee1_1 <- apply(Ee1_1, 1, min)
min_eef_1 <- apply(Eef_1, 1, min)
min_eem_1 <- apply(Eem_1, 1, min)
min_ee2_1 <- apply(Ee2_1, 1, min)
min_ee1_3 <- apply(Ee1_3, 1, min)
min_eef_3 <- apply(Eef_3, 1, min)
min_eem_3 <- apply(Eem_3, 1, min)
min_ee2_3 <- apply(Ee2_3, 1, min)
# boxplot
par(mfrow=c(1,1))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Error Rate")
title("Minumun Mean Misclassification Rate")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Mean Misclassification Rate")
boxplot(min_fpr_1, min_fpr_2, min_fpr_3)
min_error_1 <- apply(Error_1, 1, min)
min_error_2 <- apply(Error_2, 1, min)
min_error_3 <- apply(Error_3, 1, min)
min_ee1_1 <- apply(Ee1_1, 1, min)
min_eef_1 <- apply(Eef_1, 1, min)
min_eem_1 <- apply(Eem_1, 1, min)
min_ee2_1 <- apply(Ee2_1, 1, min)
min_ee1_3 <- apply(Ee1_3, 1, min)
min_eef_3 <- apply(Eef_3, 1, min)
min_eem_3 <- apply(Eem_3, 1, min)
min_ee2_3 <- apply(Ee2_3, 1, min)
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Mean Misclassification Rate")
boxplot(min_ee1_1, min_ee1_3)
boxplot(min_ee1_1, min_ee2_1)
boxplot(min_ee1_1, min_ee2_1, min_eef_1, min_eem_1)
boxplot(min_eem_1, min_eem_3)
boxplot(min_ee1_1, min_ee2_1, min_eef_1, min_eem_1)
boxplot(min_ee1_3, min_ee2_3, min_eef_3, min_eem_3)
boxplot(min_ee1_1, min_ee2_1, min_eef_1, min_eem_1, min_ee1_3, min_ee2_3, min_eef_3, min_eem_3)
boxplot(min_eem_1, min_eem_3)
boxplot(min_ee1_1, min_ee1_3)
boxplot(min_ee2_1, min_ee2_3)
boxplot(min_eef_1, min_eef_3)
boxplot(min_eem_1, min_eem_3)
boxplot(min_ee1_1, min_ee1_3)
boxplot(min_ee2_1, min_ee2_3)
boxplot(min_eef_1, min_eef_3)
boxplot(min_eem_1, min_eem_3)
par(mfrow=c(1,1))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Mean Misclassification Rate")
par(mfrow=c(1,2))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Mean Misclassification Rate")
title("Minumun Mean \nMisclassification Rate")
par(mfrow=c(1,2))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Mean \nMisclassification Rate")
par(mfrow=c(2,2))
boxplot(min_ee1_1, min_ee1_3)
boxplot(min_ee2_1, min_ee2_3)
boxplot(min_eef_1, min_eef_3)
boxplot(min_eem_1, min_eem_3)
par(mfrow=c(2,2))
boxplot(min_ee1_1, min_ee1_3)
title("1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("2-norm")
boxplot(min_eef_1, min_eef_3)
title("Frobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Max-norm")
par(mfrow=c(1,4))
boxplot(min_ee1_1, min_ee1_3)
title("1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("2-norm")
boxplot(min_eef_1, min_eef_3)
title("Frobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Max-norm")
# boxplot
par(mfrow=c(1,6))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun Mean \nMisclassification Rate")
boxplot(min_ee1_1, min_ee1_3)
title("1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("2-norm")
boxplot(min_eef_1, min_eef_3)
title("Frobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Max-norm")
par(mfrow=c(1,4))
boxplot(min_ee1_1, min_ee1_3)
title("Minimunm 1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("Minimunm 2-norm")
boxplot(min_eef_1, min_eef_3)
title("Minimunm Frobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Minimunm Max-norm")
# boxplot 2
par(mfrow=c(1,4))
boxplot(min_ee1_1, min_ee1_3)
title("Minimunm Mean\n1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("Minimunm Mean\n2-norm")
boxplot(min_eef_1, min_eef_3)
title("Minimunm Mean\nFrobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Minimunm Mean\nMax-norm")
par(mfrow=c(1,4))
boxplot(min_ee1_1, min_ee1_3)
title("Minimunm \n1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("Minimunm \n2-norm")
boxplot(min_eef_1, min_eef_3)
title("Minimunm \nFrobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Minimunm \nMax-norm")
# boxplot 1
par(mfrow=c(1,2))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun \nMisclassification Rate")
# boxplot 1
par(mfrow=c(1,2))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun \nMisclassification Rate")
# boxplot 2
par(mfrow=c(1,4))
boxplot(min_ee1_1, min_ee1_3)
title("Minimunm \n1-norm")
boxplot(min_ee2_1, min_ee2_3)
title("Minimunm \n2-norm")
boxplot(min_eef_1, min_eef_3)
title("Minimunm \nFrobenius-norm")
boxplot(min_eem_1, min_eem_3)
title("Minimunm \nMax-norm")
# boxplot 1
par(mfrow=c(1,2))
boxplot(auc_1, auc_2, auc_3)
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3)
title("Minumun \nMisclassification Rate")
boxplot(auc_1, auc_2, auc_3, xlab=c(2,3,4))
boxplot(auc_1, auc_2, auc_3, names=c("node-wise 1","node-wise 2", "graphical"))
boxplot(auc_1, auc_2, auc_3, names=c("node 1","node 2", "graphical"))
boxplot(min_error_1, min_error_2, min_error_3, names=c("node 1","node 2", "graphical"))
# boxplot 1
par(mfrow=c(1,2))
boxplot(auc_1, auc_2, auc_3, names=c("node 1","node 2", "graphical"))
title("AUC")
boxplot(min_error_1, min_error_2, min_error_3, names=c("node 1","node 2", "graphical"))
title("Minumun \nMisclassification Rate")
# mean norm of Graphical Lasso
ylab = expression(paste("Mean norm of ",hat(Theta)-Theta))
ylim = c(0, 1.5)
xlim = NULL
plot.cv(Ee1_3, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Ee2_3, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eef_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eem_3, grid, col=6, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topright",legend=c("1-norm","2-norm","Frobenius norm","max norm"), col=c(2,3,4,6), pch="-", cex = 1)
title("10-folds CV using Graphical Lasso")
par(mfrow=c(1,1))
# mean norm of Graphical Lasso
ylab = expression(paste("Mean norm of ",hat(Theta)-Theta))
ylim = c(0, 1.5)
xlim = NULL
plot.cv(Ee1_3, grid, col=2, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Ee2_3, grid, col=3, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eef_3, grid, col=4, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
par(new=T)
plot.cv(Eem_3, grid, col=6, ylim=ylim, xlim=xlim, ylab=ylab, xlab=expression(paste("log(",lambda,")")) )
legend("topright",legend=c("1-norm","2-norm","Frobenius norm","max norm"), col=c(2,3,4,6), pch="-", cex = 1)
title("10-folds CV using Graphical Lasso")
